#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1189403918695843892) {
   out_1189403918695843892[0] = 0;
   out_1189403918695843892[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1189403918695843892[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1189403918695843892[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1189403918695843892[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1189403918695843892[5] = -sin(in_vec[1]);
   out_1189403918695843892[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1189403918695843892[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1189403918695843892[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1189403918695843892[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1189403918695843892[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1189403918695843892[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1189403918695843892[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1189403918695843892[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1189403918695843892[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1189403918695843892[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1189403918695843892[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1189403918695843892[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_5827728672082830178) {
   out_5827728672082830178[0] = delta_x[0] + nom_x[0];
   out_5827728672082830178[1] = delta_x[1] + nom_x[1];
   out_5827728672082830178[2] = delta_x[2] + nom_x[2];
   out_5827728672082830178[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_5827728672082830178[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_5827728672082830178[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_5827728672082830178[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_5827728672082830178[7] = delta_x[6] + nom_x[7];
   out_5827728672082830178[8] = delta_x[7] + nom_x[8];
   out_5827728672082830178[9] = delta_x[8] + nom_x[9];
   out_5827728672082830178[10] = delta_x[9] + nom_x[10];
   out_5827728672082830178[11] = delta_x[10] + nom_x[11];
   out_5827728672082830178[12] = delta_x[11] + nom_x[12];
   out_5827728672082830178[13] = delta_x[12] + nom_x[13];
   out_5827728672082830178[14] = delta_x[13] + nom_x[14];
   out_5827728672082830178[15] = delta_x[14] + nom_x[15];
   out_5827728672082830178[16] = delta_x[15] + nom_x[16];
   out_5827728672082830178[17] = delta_x[16] + nom_x[17];
   out_5827728672082830178[18] = delta_x[17] + nom_x[18];
   out_5827728672082830178[19] = delta_x[18] + nom_x[19];
   out_5827728672082830178[20] = delta_x[19] + nom_x[20];
   out_5827728672082830178[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6403087584989244091) {
   out_6403087584989244091[0] = -nom_x[0] + true_x[0];
   out_6403087584989244091[1] = -nom_x[1] + true_x[1];
   out_6403087584989244091[2] = -nom_x[2] + true_x[2];
   out_6403087584989244091[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6403087584989244091[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6403087584989244091[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6403087584989244091[6] = -nom_x[7] + true_x[7];
   out_6403087584989244091[7] = -nom_x[8] + true_x[8];
   out_6403087584989244091[8] = -nom_x[9] + true_x[9];
   out_6403087584989244091[9] = -nom_x[10] + true_x[10];
   out_6403087584989244091[10] = -nom_x[11] + true_x[11];
   out_6403087584989244091[11] = -nom_x[12] + true_x[12];
   out_6403087584989244091[12] = -nom_x[13] + true_x[13];
   out_6403087584989244091[13] = -nom_x[14] + true_x[14];
   out_6403087584989244091[14] = -nom_x[15] + true_x[15];
   out_6403087584989244091[15] = -nom_x[16] + true_x[16];
   out_6403087584989244091[16] = -nom_x[17] + true_x[17];
   out_6403087584989244091[17] = -nom_x[18] + true_x[18];
   out_6403087584989244091[18] = -nom_x[19] + true_x[19];
   out_6403087584989244091[19] = -nom_x[20] + true_x[20];
   out_6403087584989244091[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6682673624500932631) {
   out_6682673624500932631[0] = 1.0;
   out_6682673624500932631[1] = 0;
   out_6682673624500932631[2] = 0;
   out_6682673624500932631[3] = 0;
   out_6682673624500932631[4] = 0;
   out_6682673624500932631[5] = 0;
   out_6682673624500932631[6] = 0;
   out_6682673624500932631[7] = 0;
   out_6682673624500932631[8] = 0;
   out_6682673624500932631[9] = 0;
   out_6682673624500932631[10] = 0;
   out_6682673624500932631[11] = 0;
   out_6682673624500932631[12] = 0;
   out_6682673624500932631[13] = 0;
   out_6682673624500932631[14] = 0;
   out_6682673624500932631[15] = 0;
   out_6682673624500932631[16] = 0;
   out_6682673624500932631[17] = 0;
   out_6682673624500932631[18] = 0;
   out_6682673624500932631[19] = 0;
   out_6682673624500932631[20] = 0;
   out_6682673624500932631[21] = 0;
   out_6682673624500932631[22] = 1.0;
   out_6682673624500932631[23] = 0;
   out_6682673624500932631[24] = 0;
   out_6682673624500932631[25] = 0;
   out_6682673624500932631[26] = 0;
   out_6682673624500932631[27] = 0;
   out_6682673624500932631[28] = 0;
   out_6682673624500932631[29] = 0;
   out_6682673624500932631[30] = 0;
   out_6682673624500932631[31] = 0;
   out_6682673624500932631[32] = 0;
   out_6682673624500932631[33] = 0;
   out_6682673624500932631[34] = 0;
   out_6682673624500932631[35] = 0;
   out_6682673624500932631[36] = 0;
   out_6682673624500932631[37] = 0;
   out_6682673624500932631[38] = 0;
   out_6682673624500932631[39] = 0;
   out_6682673624500932631[40] = 0;
   out_6682673624500932631[41] = 0;
   out_6682673624500932631[42] = 0;
   out_6682673624500932631[43] = 0;
   out_6682673624500932631[44] = 1.0;
   out_6682673624500932631[45] = 0;
   out_6682673624500932631[46] = 0;
   out_6682673624500932631[47] = 0;
   out_6682673624500932631[48] = 0;
   out_6682673624500932631[49] = 0;
   out_6682673624500932631[50] = 0;
   out_6682673624500932631[51] = 0;
   out_6682673624500932631[52] = 0;
   out_6682673624500932631[53] = 0;
   out_6682673624500932631[54] = 0;
   out_6682673624500932631[55] = 0;
   out_6682673624500932631[56] = 0;
   out_6682673624500932631[57] = 0;
   out_6682673624500932631[58] = 0;
   out_6682673624500932631[59] = 0;
   out_6682673624500932631[60] = 0;
   out_6682673624500932631[61] = 0;
   out_6682673624500932631[62] = 0;
   out_6682673624500932631[63] = 0;
   out_6682673624500932631[64] = 0;
   out_6682673624500932631[65] = 0;
   out_6682673624500932631[66] = -0.5*state[4];
   out_6682673624500932631[67] = -0.5*state[5];
   out_6682673624500932631[68] = -0.5*state[6];
   out_6682673624500932631[69] = 0;
   out_6682673624500932631[70] = 0;
   out_6682673624500932631[71] = 0;
   out_6682673624500932631[72] = 0;
   out_6682673624500932631[73] = 0;
   out_6682673624500932631[74] = 0;
   out_6682673624500932631[75] = 0;
   out_6682673624500932631[76] = 0;
   out_6682673624500932631[77] = 0;
   out_6682673624500932631[78] = 0;
   out_6682673624500932631[79] = 0;
   out_6682673624500932631[80] = 0;
   out_6682673624500932631[81] = 0;
   out_6682673624500932631[82] = 0;
   out_6682673624500932631[83] = 0;
   out_6682673624500932631[84] = 0;
   out_6682673624500932631[85] = 0;
   out_6682673624500932631[86] = 0;
   out_6682673624500932631[87] = 0.5*state[3];
   out_6682673624500932631[88] = 0.5*state[6];
   out_6682673624500932631[89] = -0.5*state[5];
   out_6682673624500932631[90] = 0;
   out_6682673624500932631[91] = 0;
   out_6682673624500932631[92] = 0;
   out_6682673624500932631[93] = 0;
   out_6682673624500932631[94] = 0;
   out_6682673624500932631[95] = 0;
   out_6682673624500932631[96] = 0;
   out_6682673624500932631[97] = 0;
   out_6682673624500932631[98] = 0;
   out_6682673624500932631[99] = 0;
   out_6682673624500932631[100] = 0;
   out_6682673624500932631[101] = 0;
   out_6682673624500932631[102] = 0;
   out_6682673624500932631[103] = 0;
   out_6682673624500932631[104] = 0;
   out_6682673624500932631[105] = 0;
   out_6682673624500932631[106] = 0;
   out_6682673624500932631[107] = 0;
   out_6682673624500932631[108] = -0.5*state[6];
   out_6682673624500932631[109] = 0.5*state[3];
   out_6682673624500932631[110] = 0.5*state[4];
   out_6682673624500932631[111] = 0;
   out_6682673624500932631[112] = 0;
   out_6682673624500932631[113] = 0;
   out_6682673624500932631[114] = 0;
   out_6682673624500932631[115] = 0;
   out_6682673624500932631[116] = 0;
   out_6682673624500932631[117] = 0;
   out_6682673624500932631[118] = 0;
   out_6682673624500932631[119] = 0;
   out_6682673624500932631[120] = 0;
   out_6682673624500932631[121] = 0;
   out_6682673624500932631[122] = 0;
   out_6682673624500932631[123] = 0;
   out_6682673624500932631[124] = 0;
   out_6682673624500932631[125] = 0;
   out_6682673624500932631[126] = 0;
   out_6682673624500932631[127] = 0;
   out_6682673624500932631[128] = 0;
   out_6682673624500932631[129] = 0.5*state[5];
   out_6682673624500932631[130] = -0.5*state[4];
   out_6682673624500932631[131] = 0.5*state[3];
   out_6682673624500932631[132] = 0;
   out_6682673624500932631[133] = 0;
   out_6682673624500932631[134] = 0;
   out_6682673624500932631[135] = 0;
   out_6682673624500932631[136] = 0;
   out_6682673624500932631[137] = 0;
   out_6682673624500932631[138] = 0;
   out_6682673624500932631[139] = 0;
   out_6682673624500932631[140] = 0;
   out_6682673624500932631[141] = 0;
   out_6682673624500932631[142] = 0;
   out_6682673624500932631[143] = 0;
   out_6682673624500932631[144] = 0;
   out_6682673624500932631[145] = 0;
   out_6682673624500932631[146] = 0;
   out_6682673624500932631[147] = 0;
   out_6682673624500932631[148] = 0;
   out_6682673624500932631[149] = 0;
   out_6682673624500932631[150] = 0;
   out_6682673624500932631[151] = 0;
   out_6682673624500932631[152] = 0;
   out_6682673624500932631[153] = 1.0;
   out_6682673624500932631[154] = 0;
   out_6682673624500932631[155] = 0;
   out_6682673624500932631[156] = 0;
   out_6682673624500932631[157] = 0;
   out_6682673624500932631[158] = 0;
   out_6682673624500932631[159] = 0;
   out_6682673624500932631[160] = 0;
   out_6682673624500932631[161] = 0;
   out_6682673624500932631[162] = 0;
   out_6682673624500932631[163] = 0;
   out_6682673624500932631[164] = 0;
   out_6682673624500932631[165] = 0;
   out_6682673624500932631[166] = 0;
   out_6682673624500932631[167] = 0;
   out_6682673624500932631[168] = 0;
   out_6682673624500932631[169] = 0;
   out_6682673624500932631[170] = 0;
   out_6682673624500932631[171] = 0;
   out_6682673624500932631[172] = 0;
   out_6682673624500932631[173] = 0;
   out_6682673624500932631[174] = 0;
   out_6682673624500932631[175] = 1.0;
   out_6682673624500932631[176] = 0;
   out_6682673624500932631[177] = 0;
   out_6682673624500932631[178] = 0;
   out_6682673624500932631[179] = 0;
   out_6682673624500932631[180] = 0;
   out_6682673624500932631[181] = 0;
   out_6682673624500932631[182] = 0;
   out_6682673624500932631[183] = 0;
   out_6682673624500932631[184] = 0;
   out_6682673624500932631[185] = 0;
   out_6682673624500932631[186] = 0;
   out_6682673624500932631[187] = 0;
   out_6682673624500932631[188] = 0;
   out_6682673624500932631[189] = 0;
   out_6682673624500932631[190] = 0;
   out_6682673624500932631[191] = 0;
   out_6682673624500932631[192] = 0;
   out_6682673624500932631[193] = 0;
   out_6682673624500932631[194] = 0;
   out_6682673624500932631[195] = 0;
   out_6682673624500932631[196] = 0;
   out_6682673624500932631[197] = 1.0;
   out_6682673624500932631[198] = 0;
   out_6682673624500932631[199] = 0;
   out_6682673624500932631[200] = 0;
   out_6682673624500932631[201] = 0;
   out_6682673624500932631[202] = 0;
   out_6682673624500932631[203] = 0;
   out_6682673624500932631[204] = 0;
   out_6682673624500932631[205] = 0;
   out_6682673624500932631[206] = 0;
   out_6682673624500932631[207] = 0;
   out_6682673624500932631[208] = 0;
   out_6682673624500932631[209] = 0;
   out_6682673624500932631[210] = 0;
   out_6682673624500932631[211] = 0;
   out_6682673624500932631[212] = 0;
   out_6682673624500932631[213] = 0;
   out_6682673624500932631[214] = 0;
   out_6682673624500932631[215] = 0;
   out_6682673624500932631[216] = 0;
   out_6682673624500932631[217] = 0;
   out_6682673624500932631[218] = 0;
   out_6682673624500932631[219] = 1.0;
   out_6682673624500932631[220] = 0;
   out_6682673624500932631[221] = 0;
   out_6682673624500932631[222] = 0;
   out_6682673624500932631[223] = 0;
   out_6682673624500932631[224] = 0;
   out_6682673624500932631[225] = 0;
   out_6682673624500932631[226] = 0;
   out_6682673624500932631[227] = 0;
   out_6682673624500932631[228] = 0;
   out_6682673624500932631[229] = 0;
   out_6682673624500932631[230] = 0;
   out_6682673624500932631[231] = 0;
   out_6682673624500932631[232] = 0;
   out_6682673624500932631[233] = 0;
   out_6682673624500932631[234] = 0;
   out_6682673624500932631[235] = 0;
   out_6682673624500932631[236] = 0;
   out_6682673624500932631[237] = 0;
   out_6682673624500932631[238] = 0;
   out_6682673624500932631[239] = 0;
   out_6682673624500932631[240] = 0;
   out_6682673624500932631[241] = 1.0;
   out_6682673624500932631[242] = 0;
   out_6682673624500932631[243] = 0;
   out_6682673624500932631[244] = 0;
   out_6682673624500932631[245] = 0;
   out_6682673624500932631[246] = 0;
   out_6682673624500932631[247] = 0;
   out_6682673624500932631[248] = 0;
   out_6682673624500932631[249] = 0;
   out_6682673624500932631[250] = 0;
   out_6682673624500932631[251] = 0;
   out_6682673624500932631[252] = 0;
   out_6682673624500932631[253] = 0;
   out_6682673624500932631[254] = 0;
   out_6682673624500932631[255] = 0;
   out_6682673624500932631[256] = 0;
   out_6682673624500932631[257] = 0;
   out_6682673624500932631[258] = 0;
   out_6682673624500932631[259] = 0;
   out_6682673624500932631[260] = 0;
   out_6682673624500932631[261] = 0;
   out_6682673624500932631[262] = 0;
   out_6682673624500932631[263] = 1.0;
   out_6682673624500932631[264] = 0;
   out_6682673624500932631[265] = 0;
   out_6682673624500932631[266] = 0;
   out_6682673624500932631[267] = 0;
   out_6682673624500932631[268] = 0;
   out_6682673624500932631[269] = 0;
   out_6682673624500932631[270] = 0;
   out_6682673624500932631[271] = 0;
   out_6682673624500932631[272] = 0;
   out_6682673624500932631[273] = 0;
   out_6682673624500932631[274] = 0;
   out_6682673624500932631[275] = 0;
   out_6682673624500932631[276] = 0;
   out_6682673624500932631[277] = 0;
   out_6682673624500932631[278] = 0;
   out_6682673624500932631[279] = 0;
   out_6682673624500932631[280] = 0;
   out_6682673624500932631[281] = 0;
   out_6682673624500932631[282] = 0;
   out_6682673624500932631[283] = 0;
   out_6682673624500932631[284] = 0;
   out_6682673624500932631[285] = 1.0;
   out_6682673624500932631[286] = 0;
   out_6682673624500932631[287] = 0;
   out_6682673624500932631[288] = 0;
   out_6682673624500932631[289] = 0;
   out_6682673624500932631[290] = 0;
   out_6682673624500932631[291] = 0;
   out_6682673624500932631[292] = 0;
   out_6682673624500932631[293] = 0;
   out_6682673624500932631[294] = 0;
   out_6682673624500932631[295] = 0;
   out_6682673624500932631[296] = 0;
   out_6682673624500932631[297] = 0;
   out_6682673624500932631[298] = 0;
   out_6682673624500932631[299] = 0;
   out_6682673624500932631[300] = 0;
   out_6682673624500932631[301] = 0;
   out_6682673624500932631[302] = 0;
   out_6682673624500932631[303] = 0;
   out_6682673624500932631[304] = 0;
   out_6682673624500932631[305] = 0;
   out_6682673624500932631[306] = 0;
   out_6682673624500932631[307] = 1.0;
   out_6682673624500932631[308] = 0;
   out_6682673624500932631[309] = 0;
   out_6682673624500932631[310] = 0;
   out_6682673624500932631[311] = 0;
   out_6682673624500932631[312] = 0;
   out_6682673624500932631[313] = 0;
   out_6682673624500932631[314] = 0;
   out_6682673624500932631[315] = 0;
   out_6682673624500932631[316] = 0;
   out_6682673624500932631[317] = 0;
   out_6682673624500932631[318] = 0;
   out_6682673624500932631[319] = 0;
   out_6682673624500932631[320] = 0;
   out_6682673624500932631[321] = 0;
   out_6682673624500932631[322] = 0;
   out_6682673624500932631[323] = 0;
   out_6682673624500932631[324] = 0;
   out_6682673624500932631[325] = 0;
   out_6682673624500932631[326] = 0;
   out_6682673624500932631[327] = 0;
   out_6682673624500932631[328] = 0;
   out_6682673624500932631[329] = 1.0;
   out_6682673624500932631[330] = 0;
   out_6682673624500932631[331] = 0;
   out_6682673624500932631[332] = 0;
   out_6682673624500932631[333] = 0;
   out_6682673624500932631[334] = 0;
   out_6682673624500932631[335] = 0;
   out_6682673624500932631[336] = 0;
   out_6682673624500932631[337] = 0;
   out_6682673624500932631[338] = 0;
   out_6682673624500932631[339] = 0;
   out_6682673624500932631[340] = 0;
   out_6682673624500932631[341] = 0;
   out_6682673624500932631[342] = 0;
   out_6682673624500932631[343] = 0;
   out_6682673624500932631[344] = 0;
   out_6682673624500932631[345] = 0;
   out_6682673624500932631[346] = 0;
   out_6682673624500932631[347] = 0;
   out_6682673624500932631[348] = 0;
   out_6682673624500932631[349] = 0;
   out_6682673624500932631[350] = 0;
   out_6682673624500932631[351] = 1.0;
   out_6682673624500932631[352] = 0;
   out_6682673624500932631[353] = 0;
   out_6682673624500932631[354] = 0;
   out_6682673624500932631[355] = 0;
   out_6682673624500932631[356] = 0;
   out_6682673624500932631[357] = 0;
   out_6682673624500932631[358] = 0;
   out_6682673624500932631[359] = 0;
   out_6682673624500932631[360] = 0;
   out_6682673624500932631[361] = 0;
   out_6682673624500932631[362] = 0;
   out_6682673624500932631[363] = 0;
   out_6682673624500932631[364] = 0;
   out_6682673624500932631[365] = 0;
   out_6682673624500932631[366] = 0;
   out_6682673624500932631[367] = 0;
   out_6682673624500932631[368] = 0;
   out_6682673624500932631[369] = 0;
   out_6682673624500932631[370] = 0;
   out_6682673624500932631[371] = 0;
   out_6682673624500932631[372] = 0;
   out_6682673624500932631[373] = 1.0;
   out_6682673624500932631[374] = 0;
   out_6682673624500932631[375] = 0;
   out_6682673624500932631[376] = 0;
   out_6682673624500932631[377] = 0;
   out_6682673624500932631[378] = 0;
   out_6682673624500932631[379] = 0;
   out_6682673624500932631[380] = 0;
   out_6682673624500932631[381] = 0;
   out_6682673624500932631[382] = 0;
   out_6682673624500932631[383] = 0;
   out_6682673624500932631[384] = 0;
   out_6682673624500932631[385] = 0;
   out_6682673624500932631[386] = 0;
   out_6682673624500932631[387] = 0;
   out_6682673624500932631[388] = 0;
   out_6682673624500932631[389] = 0;
   out_6682673624500932631[390] = 0;
   out_6682673624500932631[391] = 0;
   out_6682673624500932631[392] = 0;
   out_6682673624500932631[393] = 0;
   out_6682673624500932631[394] = 0;
   out_6682673624500932631[395] = 1.0;
   out_6682673624500932631[396] = 0;
   out_6682673624500932631[397] = 0;
   out_6682673624500932631[398] = 0;
   out_6682673624500932631[399] = 0;
   out_6682673624500932631[400] = 0;
   out_6682673624500932631[401] = 0;
   out_6682673624500932631[402] = 0;
   out_6682673624500932631[403] = 0;
   out_6682673624500932631[404] = 0;
   out_6682673624500932631[405] = 0;
   out_6682673624500932631[406] = 0;
   out_6682673624500932631[407] = 0;
   out_6682673624500932631[408] = 0;
   out_6682673624500932631[409] = 0;
   out_6682673624500932631[410] = 0;
   out_6682673624500932631[411] = 0;
   out_6682673624500932631[412] = 0;
   out_6682673624500932631[413] = 0;
   out_6682673624500932631[414] = 0;
   out_6682673624500932631[415] = 0;
   out_6682673624500932631[416] = 0;
   out_6682673624500932631[417] = 1.0;
   out_6682673624500932631[418] = 0;
   out_6682673624500932631[419] = 0;
   out_6682673624500932631[420] = 0;
   out_6682673624500932631[421] = 0;
   out_6682673624500932631[422] = 0;
   out_6682673624500932631[423] = 0;
   out_6682673624500932631[424] = 0;
   out_6682673624500932631[425] = 0;
   out_6682673624500932631[426] = 0;
   out_6682673624500932631[427] = 0;
   out_6682673624500932631[428] = 0;
   out_6682673624500932631[429] = 0;
   out_6682673624500932631[430] = 0;
   out_6682673624500932631[431] = 0;
   out_6682673624500932631[432] = 0;
   out_6682673624500932631[433] = 0;
   out_6682673624500932631[434] = 0;
   out_6682673624500932631[435] = 0;
   out_6682673624500932631[436] = 0;
   out_6682673624500932631[437] = 0;
   out_6682673624500932631[438] = 0;
   out_6682673624500932631[439] = 1.0;
   out_6682673624500932631[440] = 0;
   out_6682673624500932631[441] = 0;
   out_6682673624500932631[442] = 0;
   out_6682673624500932631[443] = 0;
   out_6682673624500932631[444] = 0;
   out_6682673624500932631[445] = 0;
   out_6682673624500932631[446] = 0;
   out_6682673624500932631[447] = 0;
   out_6682673624500932631[448] = 0;
   out_6682673624500932631[449] = 0;
   out_6682673624500932631[450] = 0;
   out_6682673624500932631[451] = 0;
   out_6682673624500932631[452] = 0;
   out_6682673624500932631[453] = 0;
   out_6682673624500932631[454] = 0;
   out_6682673624500932631[455] = 0;
   out_6682673624500932631[456] = 0;
   out_6682673624500932631[457] = 0;
   out_6682673624500932631[458] = 0;
   out_6682673624500932631[459] = 0;
   out_6682673624500932631[460] = 0;
   out_6682673624500932631[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_281945508645819582) {
   out_281945508645819582[0] = dt*state[7] + state[0];
   out_281945508645819582[1] = dt*state[8] + state[1];
   out_281945508645819582[2] = dt*state[9] + state[2];
   out_281945508645819582[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_281945508645819582[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_281945508645819582[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_281945508645819582[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_281945508645819582[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_281945508645819582[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_281945508645819582[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_281945508645819582[10] = state[10];
   out_281945508645819582[11] = state[11];
   out_281945508645819582[12] = state[12];
   out_281945508645819582[13] = state[13];
   out_281945508645819582[14] = state[14];
   out_281945508645819582[15] = state[15];
   out_281945508645819582[16] = state[16];
   out_281945508645819582[17] = state[17];
   out_281945508645819582[18] = state[18];
   out_281945508645819582[19] = state[19];
   out_281945508645819582[20] = state[20];
   out_281945508645819582[21] = state[21];
}
void F_fun(double *state, double dt, double *out_5204355048752879329) {
   out_5204355048752879329[0] = 1;
   out_5204355048752879329[1] = 0;
   out_5204355048752879329[2] = 0;
   out_5204355048752879329[3] = 0;
   out_5204355048752879329[4] = 0;
   out_5204355048752879329[5] = 0;
   out_5204355048752879329[6] = dt;
   out_5204355048752879329[7] = 0;
   out_5204355048752879329[8] = 0;
   out_5204355048752879329[9] = 0;
   out_5204355048752879329[10] = 0;
   out_5204355048752879329[11] = 0;
   out_5204355048752879329[12] = 0;
   out_5204355048752879329[13] = 0;
   out_5204355048752879329[14] = 0;
   out_5204355048752879329[15] = 0;
   out_5204355048752879329[16] = 0;
   out_5204355048752879329[17] = 0;
   out_5204355048752879329[18] = 0;
   out_5204355048752879329[19] = 0;
   out_5204355048752879329[20] = 0;
   out_5204355048752879329[21] = 0;
   out_5204355048752879329[22] = 1;
   out_5204355048752879329[23] = 0;
   out_5204355048752879329[24] = 0;
   out_5204355048752879329[25] = 0;
   out_5204355048752879329[26] = 0;
   out_5204355048752879329[27] = 0;
   out_5204355048752879329[28] = dt;
   out_5204355048752879329[29] = 0;
   out_5204355048752879329[30] = 0;
   out_5204355048752879329[31] = 0;
   out_5204355048752879329[32] = 0;
   out_5204355048752879329[33] = 0;
   out_5204355048752879329[34] = 0;
   out_5204355048752879329[35] = 0;
   out_5204355048752879329[36] = 0;
   out_5204355048752879329[37] = 0;
   out_5204355048752879329[38] = 0;
   out_5204355048752879329[39] = 0;
   out_5204355048752879329[40] = 0;
   out_5204355048752879329[41] = 0;
   out_5204355048752879329[42] = 0;
   out_5204355048752879329[43] = 0;
   out_5204355048752879329[44] = 1;
   out_5204355048752879329[45] = 0;
   out_5204355048752879329[46] = 0;
   out_5204355048752879329[47] = 0;
   out_5204355048752879329[48] = 0;
   out_5204355048752879329[49] = 0;
   out_5204355048752879329[50] = dt;
   out_5204355048752879329[51] = 0;
   out_5204355048752879329[52] = 0;
   out_5204355048752879329[53] = 0;
   out_5204355048752879329[54] = 0;
   out_5204355048752879329[55] = 0;
   out_5204355048752879329[56] = 0;
   out_5204355048752879329[57] = 0;
   out_5204355048752879329[58] = 0;
   out_5204355048752879329[59] = 0;
   out_5204355048752879329[60] = 0;
   out_5204355048752879329[61] = 0;
   out_5204355048752879329[62] = 0;
   out_5204355048752879329[63] = 0;
   out_5204355048752879329[64] = 0;
   out_5204355048752879329[65] = 0;
   out_5204355048752879329[66] = 1;
   out_5204355048752879329[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5204355048752879329[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_5204355048752879329[69] = 0;
   out_5204355048752879329[70] = 0;
   out_5204355048752879329[71] = 0;
   out_5204355048752879329[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5204355048752879329[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5204355048752879329[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5204355048752879329[75] = 0;
   out_5204355048752879329[76] = 0;
   out_5204355048752879329[77] = 0;
   out_5204355048752879329[78] = 0;
   out_5204355048752879329[79] = 0;
   out_5204355048752879329[80] = 0;
   out_5204355048752879329[81] = 0;
   out_5204355048752879329[82] = 0;
   out_5204355048752879329[83] = 0;
   out_5204355048752879329[84] = 0;
   out_5204355048752879329[85] = 0;
   out_5204355048752879329[86] = 0;
   out_5204355048752879329[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_5204355048752879329[88] = 1;
   out_5204355048752879329[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_5204355048752879329[90] = 0;
   out_5204355048752879329[91] = 0;
   out_5204355048752879329[92] = 0;
   out_5204355048752879329[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5204355048752879329[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5204355048752879329[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5204355048752879329[96] = 0;
   out_5204355048752879329[97] = 0;
   out_5204355048752879329[98] = 0;
   out_5204355048752879329[99] = 0;
   out_5204355048752879329[100] = 0;
   out_5204355048752879329[101] = 0;
   out_5204355048752879329[102] = 0;
   out_5204355048752879329[103] = 0;
   out_5204355048752879329[104] = 0;
   out_5204355048752879329[105] = 0;
   out_5204355048752879329[106] = 0;
   out_5204355048752879329[107] = 0;
   out_5204355048752879329[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_5204355048752879329[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_5204355048752879329[110] = 1;
   out_5204355048752879329[111] = 0;
   out_5204355048752879329[112] = 0;
   out_5204355048752879329[113] = 0;
   out_5204355048752879329[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5204355048752879329[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5204355048752879329[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5204355048752879329[117] = 0;
   out_5204355048752879329[118] = 0;
   out_5204355048752879329[119] = 0;
   out_5204355048752879329[120] = 0;
   out_5204355048752879329[121] = 0;
   out_5204355048752879329[122] = 0;
   out_5204355048752879329[123] = 0;
   out_5204355048752879329[124] = 0;
   out_5204355048752879329[125] = 0;
   out_5204355048752879329[126] = 0;
   out_5204355048752879329[127] = 0;
   out_5204355048752879329[128] = 0;
   out_5204355048752879329[129] = 0;
   out_5204355048752879329[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5204355048752879329[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_5204355048752879329[132] = 1;
   out_5204355048752879329[133] = 0;
   out_5204355048752879329[134] = 0;
   out_5204355048752879329[135] = 0;
   out_5204355048752879329[136] = 0;
   out_5204355048752879329[137] = 0;
   out_5204355048752879329[138] = 0;
   out_5204355048752879329[139] = 0;
   out_5204355048752879329[140] = 0;
   out_5204355048752879329[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5204355048752879329[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5204355048752879329[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5204355048752879329[144] = 0;
   out_5204355048752879329[145] = 0;
   out_5204355048752879329[146] = 0;
   out_5204355048752879329[147] = 0;
   out_5204355048752879329[148] = 0;
   out_5204355048752879329[149] = 0;
   out_5204355048752879329[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_5204355048752879329[151] = 0;
   out_5204355048752879329[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_5204355048752879329[153] = 0;
   out_5204355048752879329[154] = 1;
   out_5204355048752879329[155] = 0;
   out_5204355048752879329[156] = 0;
   out_5204355048752879329[157] = 0;
   out_5204355048752879329[158] = 0;
   out_5204355048752879329[159] = 0;
   out_5204355048752879329[160] = 0;
   out_5204355048752879329[161] = 0;
   out_5204355048752879329[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_5204355048752879329[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5204355048752879329[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5204355048752879329[165] = 0;
   out_5204355048752879329[166] = 0;
   out_5204355048752879329[167] = 0;
   out_5204355048752879329[168] = 0;
   out_5204355048752879329[169] = 0;
   out_5204355048752879329[170] = 0;
   out_5204355048752879329[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_5204355048752879329[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_5204355048752879329[173] = 0;
   out_5204355048752879329[174] = 0;
   out_5204355048752879329[175] = 0;
   out_5204355048752879329[176] = 1;
   out_5204355048752879329[177] = 0;
   out_5204355048752879329[178] = 0;
   out_5204355048752879329[179] = 0;
   out_5204355048752879329[180] = 0;
   out_5204355048752879329[181] = 0;
   out_5204355048752879329[182] = 0;
   out_5204355048752879329[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_5204355048752879329[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_5204355048752879329[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5204355048752879329[186] = 0;
   out_5204355048752879329[187] = 0;
   out_5204355048752879329[188] = 0;
   out_5204355048752879329[189] = 0;
   out_5204355048752879329[190] = 0;
   out_5204355048752879329[191] = 0;
   out_5204355048752879329[192] = 0;
   out_5204355048752879329[193] = 0;
   out_5204355048752879329[194] = 0;
   out_5204355048752879329[195] = 0;
   out_5204355048752879329[196] = 0;
   out_5204355048752879329[197] = 0;
   out_5204355048752879329[198] = 1;
   out_5204355048752879329[199] = 0;
   out_5204355048752879329[200] = 0;
   out_5204355048752879329[201] = 0;
   out_5204355048752879329[202] = 0;
   out_5204355048752879329[203] = 0;
   out_5204355048752879329[204] = 0;
   out_5204355048752879329[205] = 0;
   out_5204355048752879329[206] = 0;
   out_5204355048752879329[207] = 0;
   out_5204355048752879329[208] = 0;
   out_5204355048752879329[209] = 0;
   out_5204355048752879329[210] = 0;
   out_5204355048752879329[211] = 0;
   out_5204355048752879329[212] = 0;
   out_5204355048752879329[213] = 0;
   out_5204355048752879329[214] = 0;
   out_5204355048752879329[215] = 0;
   out_5204355048752879329[216] = 0;
   out_5204355048752879329[217] = 0;
   out_5204355048752879329[218] = 0;
   out_5204355048752879329[219] = 0;
   out_5204355048752879329[220] = 1;
   out_5204355048752879329[221] = 0;
   out_5204355048752879329[222] = 0;
   out_5204355048752879329[223] = 0;
   out_5204355048752879329[224] = 0;
   out_5204355048752879329[225] = 0;
   out_5204355048752879329[226] = 0;
   out_5204355048752879329[227] = 0;
   out_5204355048752879329[228] = 0;
   out_5204355048752879329[229] = 0;
   out_5204355048752879329[230] = 0;
   out_5204355048752879329[231] = 0;
   out_5204355048752879329[232] = 0;
   out_5204355048752879329[233] = 0;
   out_5204355048752879329[234] = 0;
   out_5204355048752879329[235] = 0;
   out_5204355048752879329[236] = 0;
   out_5204355048752879329[237] = 0;
   out_5204355048752879329[238] = 0;
   out_5204355048752879329[239] = 0;
   out_5204355048752879329[240] = 0;
   out_5204355048752879329[241] = 0;
   out_5204355048752879329[242] = 1;
   out_5204355048752879329[243] = 0;
   out_5204355048752879329[244] = 0;
   out_5204355048752879329[245] = 0;
   out_5204355048752879329[246] = 0;
   out_5204355048752879329[247] = 0;
   out_5204355048752879329[248] = 0;
   out_5204355048752879329[249] = 0;
   out_5204355048752879329[250] = 0;
   out_5204355048752879329[251] = 0;
   out_5204355048752879329[252] = 0;
   out_5204355048752879329[253] = 0;
   out_5204355048752879329[254] = 0;
   out_5204355048752879329[255] = 0;
   out_5204355048752879329[256] = 0;
   out_5204355048752879329[257] = 0;
   out_5204355048752879329[258] = 0;
   out_5204355048752879329[259] = 0;
   out_5204355048752879329[260] = 0;
   out_5204355048752879329[261] = 0;
   out_5204355048752879329[262] = 0;
   out_5204355048752879329[263] = 0;
   out_5204355048752879329[264] = 1;
   out_5204355048752879329[265] = 0;
   out_5204355048752879329[266] = 0;
   out_5204355048752879329[267] = 0;
   out_5204355048752879329[268] = 0;
   out_5204355048752879329[269] = 0;
   out_5204355048752879329[270] = 0;
   out_5204355048752879329[271] = 0;
   out_5204355048752879329[272] = 0;
   out_5204355048752879329[273] = 0;
   out_5204355048752879329[274] = 0;
   out_5204355048752879329[275] = 0;
   out_5204355048752879329[276] = 0;
   out_5204355048752879329[277] = 0;
   out_5204355048752879329[278] = 0;
   out_5204355048752879329[279] = 0;
   out_5204355048752879329[280] = 0;
   out_5204355048752879329[281] = 0;
   out_5204355048752879329[282] = 0;
   out_5204355048752879329[283] = 0;
   out_5204355048752879329[284] = 0;
   out_5204355048752879329[285] = 0;
   out_5204355048752879329[286] = 1;
   out_5204355048752879329[287] = 0;
   out_5204355048752879329[288] = 0;
   out_5204355048752879329[289] = 0;
   out_5204355048752879329[290] = 0;
   out_5204355048752879329[291] = 0;
   out_5204355048752879329[292] = 0;
   out_5204355048752879329[293] = 0;
   out_5204355048752879329[294] = 0;
   out_5204355048752879329[295] = 0;
   out_5204355048752879329[296] = 0;
   out_5204355048752879329[297] = 0;
   out_5204355048752879329[298] = 0;
   out_5204355048752879329[299] = 0;
   out_5204355048752879329[300] = 0;
   out_5204355048752879329[301] = 0;
   out_5204355048752879329[302] = 0;
   out_5204355048752879329[303] = 0;
   out_5204355048752879329[304] = 0;
   out_5204355048752879329[305] = 0;
   out_5204355048752879329[306] = 0;
   out_5204355048752879329[307] = 0;
   out_5204355048752879329[308] = 1;
   out_5204355048752879329[309] = 0;
   out_5204355048752879329[310] = 0;
   out_5204355048752879329[311] = 0;
   out_5204355048752879329[312] = 0;
   out_5204355048752879329[313] = 0;
   out_5204355048752879329[314] = 0;
   out_5204355048752879329[315] = 0;
   out_5204355048752879329[316] = 0;
   out_5204355048752879329[317] = 0;
   out_5204355048752879329[318] = 0;
   out_5204355048752879329[319] = 0;
   out_5204355048752879329[320] = 0;
   out_5204355048752879329[321] = 0;
   out_5204355048752879329[322] = 0;
   out_5204355048752879329[323] = 0;
   out_5204355048752879329[324] = 0;
   out_5204355048752879329[325] = 0;
   out_5204355048752879329[326] = 0;
   out_5204355048752879329[327] = 0;
   out_5204355048752879329[328] = 0;
   out_5204355048752879329[329] = 0;
   out_5204355048752879329[330] = 1;
   out_5204355048752879329[331] = 0;
   out_5204355048752879329[332] = 0;
   out_5204355048752879329[333] = 0;
   out_5204355048752879329[334] = 0;
   out_5204355048752879329[335] = 0;
   out_5204355048752879329[336] = 0;
   out_5204355048752879329[337] = 0;
   out_5204355048752879329[338] = 0;
   out_5204355048752879329[339] = 0;
   out_5204355048752879329[340] = 0;
   out_5204355048752879329[341] = 0;
   out_5204355048752879329[342] = 0;
   out_5204355048752879329[343] = 0;
   out_5204355048752879329[344] = 0;
   out_5204355048752879329[345] = 0;
   out_5204355048752879329[346] = 0;
   out_5204355048752879329[347] = 0;
   out_5204355048752879329[348] = 0;
   out_5204355048752879329[349] = 0;
   out_5204355048752879329[350] = 0;
   out_5204355048752879329[351] = 0;
   out_5204355048752879329[352] = 1;
   out_5204355048752879329[353] = 0;
   out_5204355048752879329[354] = 0;
   out_5204355048752879329[355] = 0;
   out_5204355048752879329[356] = 0;
   out_5204355048752879329[357] = 0;
   out_5204355048752879329[358] = 0;
   out_5204355048752879329[359] = 0;
   out_5204355048752879329[360] = 0;
   out_5204355048752879329[361] = 0;
   out_5204355048752879329[362] = 0;
   out_5204355048752879329[363] = 0;
   out_5204355048752879329[364] = 0;
   out_5204355048752879329[365] = 0;
   out_5204355048752879329[366] = 0;
   out_5204355048752879329[367] = 0;
   out_5204355048752879329[368] = 0;
   out_5204355048752879329[369] = 0;
   out_5204355048752879329[370] = 0;
   out_5204355048752879329[371] = 0;
   out_5204355048752879329[372] = 0;
   out_5204355048752879329[373] = 0;
   out_5204355048752879329[374] = 1;
   out_5204355048752879329[375] = 0;
   out_5204355048752879329[376] = 0;
   out_5204355048752879329[377] = 0;
   out_5204355048752879329[378] = 0;
   out_5204355048752879329[379] = 0;
   out_5204355048752879329[380] = 0;
   out_5204355048752879329[381] = 0;
   out_5204355048752879329[382] = 0;
   out_5204355048752879329[383] = 0;
   out_5204355048752879329[384] = 0;
   out_5204355048752879329[385] = 0;
   out_5204355048752879329[386] = 0;
   out_5204355048752879329[387] = 0;
   out_5204355048752879329[388] = 0;
   out_5204355048752879329[389] = 0;
   out_5204355048752879329[390] = 0;
   out_5204355048752879329[391] = 0;
   out_5204355048752879329[392] = 0;
   out_5204355048752879329[393] = 0;
   out_5204355048752879329[394] = 0;
   out_5204355048752879329[395] = 0;
   out_5204355048752879329[396] = 1;
   out_5204355048752879329[397] = 0;
   out_5204355048752879329[398] = 0;
   out_5204355048752879329[399] = 0;
   out_5204355048752879329[400] = 0;
   out_5204355048752879329[401] = 0;
   out_5204355048752879329[402] = 0;
   out_5204355048752879329[403] = 0;
   out_5204355048752879329[404] = 0;
   out_5204355048752879329[405] = 0;
   out_5204355048752879329[406] = 0;
   out_5204355048752879329[407] = 0;
   out_5204355048752879329[408] = 0;
   out_5204355048752879329[409] = 0;
   out_5204355048752879329[410] = 0;
   out_5204355048752879329[411] = 0;
   out_5204355048752879329[412] = 0;
   out_5204355048752879329[413] = 0;
   out_5204355048752879329[414] = 0;
   out_5204355048752879329[415] = 0;
   out_5204355048752879329[416] = 0;
   out_5204355048752879329[417] = 0;
   out_5204355048752879329[418] = 1;
   out_5204355048752879329[419] = 0;
   out_5204355048752879329[420] = 0;
   out_5204355048752879329[421] = 0;
   out_5204355048752879329[422] = 0;
   out_5204355048752879329[423] = 0;
   out_5204355048752879329[424] = 0;
   out_5204355048752879329[425] = 0;
   out_5204355048752879329[426] = 0;
   out_5204355048752879329[427] = 0;
   out_5204355048752879329[428] = 0;
   out_5204355048752879329[429] = 0;
   out_5204355048752879329[430] = 0;
   out_5204355048752879329[431] = 0;
   out_5204355048752879329[432] = 0;
   out_5204355048752879329[433] = 0;
   out_5204355048752879329[434] = 0;
   out_5204355048752879329[435] = 0;
   out_5204355048752879329[436] = 0;
   out_5204355048752879329[437] = 0;
   out_5204355048752879329[438] = 0;
   out_5204355048752879329[439] = 0;
   out_5204355048752879329[440] = 1;
}
void h_4(double *state, double *unused, double *out_6268461379963490354) {
   out_6268461379963490354[0] = state[10] + state[13];
   out_6268461379963490354[1] = state[11] + state[14];
   out_6268461379963490354[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7897248298350583968) {
   out_7897248298350583968[0] = 0;
   out_7897248298350583968[1] = 0;
   out_7897248298350583968[2] = 0;
   out_7897248298350583968[3] = 0;
   out_7897248298350583968[4] = 0;
   out_7897248298350583968[5] = 0;
   out_7897248298350583968[6] = 0;
   out_7897248298350583968[7] = 0;
   out_7897248298350583968[8] = 0;
   out_7897248298350583968[9] = 0;
   out_7897248298350583968[10] = 1;
   out_7897248298350583968[11] = 0;
   out_7897248298350583968[12] = 0;
   out_7897248298350583968[13] = 1;
   out_7897248298350583968[14] = 0;
   out_7897248298350583968[15] = 0;
   out_7897248298350583968[16] = 0;
   out_7897248298350583968[17] = 0;
   out_7897248298350583968[18] = 0;
   out_7897248298350583968[19] = 0;
   out_7897248298350583968[20] = 0;
   out_7897248298350583968[21] = 0;
   out_7897248298350583968[22] = 0;
   out_7897248298350583968[23] = 0;
   out_7897248298350583968[24] = 0;
   out_7897248298350583968[25] = 0;
   out_7897248298350583968[26] = 0;
   out_7897248298350583968[27] = 0;
   out_7897248298350583968[28] = 0;
   out_7897248298350583968[29] = 0;
   out_7897248298350583968[30] = 0;
   out_7897248298350583968[31] = 0;
   out_7897248298350583968[32] = 0;
   out_7897248298350583968[33] = 1;
   out_7897248298350583968[34] = 0;
   out_7897248298350583968[35] = 0;
   out_7897248298350583968[36] = 1;
   out_7897248298350583968[37] = 0;
   out_7897248298350583968[38] = 0;
   out_7897248298350583968[39] = 0;
   out_7897248298350583968[40] = 0;
   out_7897248298350583968[41] = 0;
   out_7897248298350583968[42] = 0;
   out_7897248298350583968[43] = 0;
   out_7897248298350583968[44] = 0;
   out_7897248298350583968[45] = 0;
   out_7897248298350583968[46] = 0;
   out_7897248298350583968[47] = 0;
   out_7897248298350583968[48] = 0;
   out_7897248298350583968[49] = 0;
   out_7897248298350583968[50] = 0;
   out_7897248298350583968[51] = 0;
   out_7897248298350583968[52] = 0;
   out_7897248298350583968[53] = 0;
   out_7897248298350583968[54] = 0;
   out_7897248298350583968[55] = 0;
   out_7897248298350583968[56] = 1;
   out_7897248298350583968[57] = 0;
   out_7897248298350583968[58] = 0;
   out_7897248298350583968[59] = 1;
   out_7897248298350583968[60] = 0;
   out_7897248298350583968[61] = 0;
   out_7897248298350583968[62] = 0;
   out_7897248298350583968[63] = 0;
   out_7897248298350583968[64] = 0;
   out_7897248298350583968[65] = 0;
}
void h_9(double *state, double *unused, double *out_3506819500148172015) {
   out_3506819500148172015[0] = state[10];
   out_3506819500148172015[1] = state[11];
   out_3506819500148172015[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3262276840094520178) {
   out_3262276840094520178[0] = 0;
   out_3262276840094520178[1] = 0;
   out_3262276840094520178[2] = 0;
   out_3262276840094520178[3] = 0;
   out_3262276840094520178[4] = 0;
   out_3262276840094520178[5] = 0;
   out_3262276840094520178[6] = 0;
   out_3262276840094520178[7] = 0;
   out_3262276840094520178[8] = 0;
   out_3262276840094520178[9] = 0;
   out_3262276840094520178[10] = 1;
   out_3262276840094520178[11] = 0;
   out_3262276840094520178[12] = 0;
   out_3262276840094520178[13] = 0;
   out_3262276840094520178[14] = 0;
   out_3262276840094520178[15] = 0;
   out_3262276840094520178[16] = 0;
   out_3262276840094520178[17] = 0;
   out_3262276840094520178[18] = 0;
   out_3262276840094520178[19] = 0;
   out_3262276840094520178[20] = 0;
   out_3262276840094520178[21] = 0;
   out_3262276840094520178[22] = 0;
   out_3262276840094520178[23] = 0;
   out_3262276840094520178[24] = 0;
   out_3262276840094520178[25] = 0;
   out_3262276840094520178[26] = 0;
   out_3262276840094520178[27] = 0;
   out_3262276840094520178[28] = 0;
   out_3262276840094520178[29] = 0;
   out_3262276840094520178[30] = 0;
   out_3262276840094520178[31] = 0;
   out_3262276840094520178[32] = 0;
   out_3262276840094520178[33] = 1;
   out_3262276840094520178[34] = 0;
   out_3262276840094520178[35] = 0;
   out_3262276840094520178[36] = 0;
   out_3262276840094520178[37] = 0;
   out_3262276840094520178[38] = 0;
   out_3262276840094520178[39] = 0;
   out_3262276840094520178[40] = 0;
   out_3262276840094520178[41] = 0;
   out_3262276840094520178[42] = 0;
   out_3262276840094520178[43] = 0;
   out_3262276840094520178[44] = 0;
   out_3262276840094520178[45] = 0;
   out_3262276840094520178[46] = 0;
   out_3262276840094520178[47] = 0;
   out_3262276840094520178[48] = 0;
   out_3262276840094520178[49] = 0;
   out_3262276840094520178[50] = 0;
   out_3262276840094520178[51] = 0;
   out_3262276840094520178[52] = 0;
   out_3262276840094520178[53] = 0;
   out_3262276840094520178[54] = 0;
   out_3262276840094520178[55] = 0;
   out_3262276840094520178[56] = 1;
   out_3262276840094520178[57] = 0;
   out_3262276840094520178[58] = 0;
   out_3262276840094520178[59] = 0;
   out_3262276840094520178[60] = 0;
   out_3262276840094520178[61] = 0;
   out_3262276840094520178[62] = 0;
   out_3262276840094520178[63] = 0;
   out_3262276840094520178[64] = 0;
   out_3262276840094520178[65] = 0;
}
void h_10(double *state, double *unused, double *out_2071964238460945639) {
   out_2071964238460945639[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_2071964238460945639[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_2071964238460945639[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3438028015911880382) {
   out_3438028015911880382[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3438028015911880382[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3438028015911880382[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3438028015911880382[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3438028015911880382[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3438028015911880382[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3438028015911880382[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3438028015911880382[7] = 0;
   out_3438028015911880382[8] = 0;
   out_3438028015911880382[9] = 0;
   out_3438028015911880382[10] = 0;
   out_3438028015911880382[11] = 0;
   out_3438028015911880382[12] = 0;
   out_3438028015911880382[13] = 0;
   out_3438028015911880382[14] = 0;
   out_3438028015911880382[15] = 0;
   out_3438028015911880382[16] = 1;
   out_3438028015911880382[17] = 0;
   out_3438028015911880382[18] = 0;
   out_3438028015911880382[19] = 1;
   out_3438028015911880382[20] = 0;
   out_3438028015911880382[21] = 0;
   out_3438028015911880382[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3438028015911880382[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3438028015911880382[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3438028015911880382[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3438028015911880382[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3438028015911880382[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3438028015911880382[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3438028015911880382[29] = 0;
   out_3438028015911880382[30] = 0;
   out_3438028015911880382[31] = 0;
   out_3438028015911880382[32] = 0;
   out_3438028015911880382[33] = 0;
   out_3438028015911880382[34] = 0;
   out_3438028015911880382[35] = 0;
   out_3438028015911880382[36] = 0;
   out_3438028015911880382[37] = 0;
   out_3438028015911880382[38] = 0;
   out_3438028015911880382[39] = 1;
   out_3438028015911880382[40] = 0;
   out_3438028015911880382[41] = 0;
   out_3438028015911880382[42] = 1;
   out_3438028015911880382[43] = 0;
   out_3438028015911880382[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3438028015911880382[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3438028015911880382[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3438028015911880382[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3438028015911880382[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3438028015911880382[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3438028015911880382[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3438028015911880382[51] = 0;
   out_3438028015911880382[52] = 0;
   out_3438028015911880382[53] = 0;
   out_3438028015911880382[54] = 0;
   out_3438028015911880382[55] = 0;
   out_3438028015911880382[56] = 0;
   out_3438028015911880382[57] = 0;
   out_3438028015911880382[58] = 0;
   out_3438028015911880382[59] = 0;
   out_3438028015911880382[60] = 0;
   out_3438028015911880382[61] = 0;
   out_3438028015911880382[62] = 1;
   out_3438028015911880382[63] = 0;
   out_3438028015911880382[64] = 0;
   out_3438028015911880382[65] = 1;
}
void h_12(double *state, double *unused, double *out_3586858468164272311) {
   out_3586858468164272311[0] = state[0];
   out_3586858468164272311[1] = state[1];
   out_3586858468164272311[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1515989921307850972) {
   out_1515989921307850972[0] = 1;
   out_1515989921307850972[1] = 0;
   out_1515989921307850972[2] = 0;
   out_1515989921307850972[3] = 0;
   out_1515989921307850972[4] = 0;
   out_1515989921307850972[5] = 0;
   out_1515989921307850972[6] = 0;
   out_1515989921307850972[7] = 0;
   out_1515989921307850972[8] = 0;
   out_1515989921307850972[9] = 0;
   out_1515989921307850972[10] = 0;
   out_1515989921307850972[11] = 0;
   out_1515989921307850972[12] = 0;
   out_1515989921307850972[13] = 0;
   out_1515989921307850972[14] = 0;
   out_1515989921307850972[15] = 0;
   out_1515989921307850972[16] = 0;
   out_1515989921307850972[17] = 0;
   out_1515989921307850972[18] = 0;
   out_1515989921307850972[19] = 0;
   out_1515989921307850972[20] = 0;
   out_1515989921307850972[21] = 0;
   out_1515989921307850972[22] = 0;
   out_1515989921307850972[23] = 1;
   out_1515989921307850972[24] = 0;
   out_1515989921307850972[25] = 0;
   out_1515989921307850972[26] = 0;
   out_1515989921307850972[27] = 0;
   out_1515989921307850972[28] = 0;
   out_1515989921307850972[29] = 0;
   out_1515989921307850972[30] = 0;
   out_1515989921307850972[31] = 0;
   out_1515989921307850972[32] = 0;
   out_1515989921307850972[33] = 0;
   out_1515989921307850972[34] = 0;
   out_1515989921307850972[35] = 0;
   out_1515989921307850972[36] = 0;
   out_1515989921307850972[37] = 0;
   out_1515989921307850972[38] = 0;
   out_1515989921307850972[39] = 0;
   out_1515989921307850972[40] = 0;
   out_1515989921307850972[41] = 0;
   out_1515989921307850972[42] = 0;
   out_1515989921307850972[43] = 0;
   out_1515989921307850972[44] = 0;
   out_1515989921307850972[45] = 0;
   out_1515989921307850972[46] = 1;
   out_1515989921307850972[47] = 0;
   out_1515989921307850972[48] = 0;
   out_1515989921307850972[49] = 0;
   out_1515989921307850972[50] = 0;
   out_1515989921307850972[51] = 0;
   out_1515989921307850972[52] = 0;
   out_1515989921307850972[53] = 0;
   out_1515989921307850972[54] = 0;
   out_1515989921307850972[55] = 0;
   out_1515989921307850972[56] = 0;
   out_1515989921307850972[57] = 0;
   out_1515989921307850972[58] = 0;
   out_1515989921307850972[59] = 0;
   out_1515989921307850972[60] = 0;
   out_1515989921307850972[61] = 0;
   out_1515989921307850972[62] = 0;
   out_1515989921307850972[63] = 0;
   out_1515989921307850972[64] = 0;
   out_1515989921307850972[65] = 0;
}
void h_35(double *state, double *unused, double *out_5002230194502831622) {
   out_5002230194502831622[0] = state[7];
   out_5002230194502831622[1] = state[8];
   out_5002230194502831622[2] = state[9];
}
void H_35(double *state, double *unused, double *out_2784476335001992144) {
   out_2784476335001992144[0] = 0;
   out_2784476335001992144[1] = 0;
   out_2784476335001992144[2] = 0;
   out_2784476335001992144[3] = 0;
   out_2784476335001992144[4] = 0;
   out_2784476335001992144[5] = 0;
   out_2784476335001992144[6] = 0;
   out_2784476335001992144[7] = 1;
   out_2784476335001992144[8] = 0;
   out_2784476335001992144[9] = 0;
   out_2784476335001992144[10] = 0;
   out_2784476335001992144[11] = 0;
   out_2784476335001992144[12] = 0;
   out_2784476335001992144[13] = 0;
   out_2784476335001992144[14] = 0;
   out_2784476335001992144[15] = 0;
   out_2784476335001992144[16] = 0;
   out_2784476335001992144[17] = 0;
   out_2784476335001992144[18] = 0;
   out_2784476335001992144[19] = 0;
   out_2784476335001992144[20] = 0;
   out_2784476335001992144[21] = 0;
   out_2784476335001992144[22] = 0;
   out_2784476335001992144[23] = 0;
   out_2784476335001992144[24] = 0;
   out_2784476335001992144[25] = 0;
   out_2784476335001992144[26] = 0;
   out_2784476335001992144[27] = 0;
   out_2784476335001992144[28] = 0;
   out_2784476335001992144[29] = 0;
   out_2784476335001992144[30] = 1;
   out_2784476335001992144[31] = 0;
   out_2784476335001992144[32] = 0;
   out_2784476335001992144[33] = 0;
   out_2784476335001992144[34] = 0;
   out_2784476335001992144[35] = 0;
   out_2784476335001992144[36] = 0;
   out_2784476335001992144[37] = 0;
   out_2784476335001992144[38] = 0;
   out_2784476335001992144[39] = 0;
   out_2784476335001992144[40] = 0;
   out_2784476335001992144[41] = 0;
   out_2784476335001992144[42] = 0;
   out_2784476335001992144[43] = 0;
   out_2784476335001992144[44] = 0;
   out_2784476335001992144[45] = 0;
   out_2784476335001992144[46] = 0;
   out_2784476335001992144[47] = 0;
   out_2784476335001992144[48] = 0;
   out_2784476335001992144[49] = 0;
   out_2784476335001992144[50] = 0;
   out_2784476335001992144[51] = 0;
   out_2784476335001992144[52] = 0;
   out_2784476335001992144[53] = 1;
   out_2784476335001992144[54] = 0;
   out_2784476335001992144[55] = 0;
   out_2784476335001992144[56] = 0;
   out_2784476335001992144[57] = 0;
   out_2784476335001992144[58] = 0;
   out_2784476335001992144[59] = 0;
   out_2784476335001992144[60] = 0;
   out_2784476335001992144[61] = 0;
   out_2784476335001992144[62] = 0;
   out_2784476335001992144[63] = 0;
   out_2784476335001992144[64] = 0;
   out_2784476335001992144[65] = 0;
}
void h_32(double *state, double *unused, double *out_743681562210955515) {
   out_743681562210955515[0] = state[3];
   out_743681562210955515[1] = state[4];
   out_743681562210955515[2] = state[5];
   out_743681562210955515[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3097098029889437172) {
   out_3097098029889437172[0] = 0;
   out_3097098029889437172[1] = 0;
   out_3097098029889437172[2] = 0;
   out_3097098029889437172[3] = 1;
   out_3097098029889437172[4] = 0;
   out_3097098029889437172[5] = 0;
   out_3097098029889437172[6] = 0;
   out_3097098029889437172[7] = 0;
   out_3097098029889437172[8] = 0;
   out_3097098029889437172[9] = 0;
   out_3097098029889437172[10] = 0;
   out_3097098029889437172[11] = 0;
   out_3097098029889437172[12] = 0;
   out_3097098029889437172[13] = 0;
   out_3097098029889437172[14] = 0;
   out_3097098029889437172[15] = 0;
   out_3097098029889437172[16] = 0;
   out_3097098029889437172[17] = 0;
   out_3097098029889437172[18] = 0;
   out_3097098029889437172[19] = 0;
   out_3097098029889437172[20] = 0;
   out_3097098029889437172[21] = 0;
   out_3097098029889437172[22] = 0;
   out_3097098029889437172[23] = 0;
   out_3097098029889437172[24] = 0;
   out_3097098029889437172[25] = 0;
   out_3097098029889437172[26] = 1;
   out_3097098029889437172[27] = 0;
   out_3097098029889437172[28] = 0;
   out_3097098029889437172[29] = 0;
   out_3097098029889437172[30] = 0;
   out_3097098029889437172[31] = 0;
   out_3097098029889437172[32] = 0;
   out_3097098029889437172[33] = 0;
   out_3097098029889437172[34] = 0;
   out_3097098029889437172[35] = 0;
   out_3097098029889437172[36] = 0;
   out_3097098029889437172[37] = 0;
   out_3097098029889437172[38] = 0;
   out_3097098029889437172[39] = 0;
   out_3097098029889437172[40] = 0;
   out_3097098029889437172[41] = 0;
   out_3097098029889437172[42] = 0;
   out_3097098029889437172[43] = 0;
   out_3097098029889437172[44] = 0;
   out_3097098029889437172[45] = 0;
   out_3097098029889437172[46] = 0;
   out_3097098029889437172[47] = 0;
   out_3097098029889437172[48] = 0;
   out_3097098029889437172[49] = 1;
   out_3097098029889437172[50] = 0;
   out_3097098029889437172[51] = 0;
   out_3097098029889437172[52] = 0;
   out_3097098029889437172[53] = 0;
   out_3097098029889437172[54] = 0;
   out_3097098029889437172[55] = 0;
   out_3097098029889437172[56] = 0;
   out_3097098029889437172[57] = 0;
   out_3097098029889437172[58] = 0;
   out_3097098029889437172[59] = 0;
   out_3097098029889437172[60] = 0;
   out_3097098029889437172[61] = 0;
   out_3097098029889437172[62] = 0;
   out_3097098029889437172[63] = 0;
   out_3097098029889437172[64] = 0;
   out_3097098029889437172[65] = 0;
   out_3097098029889437172[66] = 0;
   out_3097098029889437172[67] = 0;
   out_3097098029889437172[68] = 0;
   out_3097098029889437172[69] = 0;
   out_3097098029889437172[70] = 0;
   out_3097098029889437172[71] = 0;
   out_3097098029889437172[72] = 1;
   out_3097098029889437172[73] = 0;
   out_3097098029889437172[74] = 0;
   out_3097098029889437172[75] = 0;
   out_3097098029889437172[76] = 0;
   out_3097098029889437172[77] = 0;
   out_3097098029889437172[78] = 0;
   out_3097098029889437172[79] = 0;
   out_3097098029889437172[80] = 0;
   out_3097098029889437172[81] = 0;
   out_3097098029889437172[82] = 0;
   out_3097098029889437172[83] = 0;
   out_3097098029889437172[84] = 0;
   out_3097098029889437172[85] = 0;
   out_3097098029889437172[86] = 0;
   out_3097098029889437172[87] = 0;
}
void h_13(double *state, double *unused, double *out_7405346955813858797) {
   out_7405346955813858797[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7405346955813858797[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7405346955813858797[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_6209670763626135864) {
   out_6209670763626135864[0] = 0;
   out_6209670763626135864[1] = 0;
   out_6209670763626135864[2] = 0;
   out_6209670763626135864[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6209670763626135864[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6209670763626135864[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_6209670763626135864[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6209670763626135864[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_6209670763626135864[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_6209670763626135864[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_6209670763626135864[10] = 0;
   out_6209670763626135864[11] = 0;
   out_6209670763626135864[12] = 0;
   out_6209670763626135864[13] = 0;
   out_6209670763626135864[14] = 0;
   out_6209670763626135864[15] = 0;
   out_6209670763626135864[16] = 0;
   out_6209670763626135864[17] = 0;
   out_6209670763626135864[18] = 0;
   out_6209670763626135864[19] = 0;
   out_6209670763626135864[20] = 0;
   out_6209670763626135864[21] = 0;
   out_6209670763626135864[22] = 0;
   out_6209670763626135864[23] = 0;
   out_6209670763626135864[24] = 0;
   out_6209670763626135864[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_6209670763626135864[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6209670763626135864[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6209670763626135864[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_6209670763626135864[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_6209670763626135864[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_6209670763626135864[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_6209670763626135864[32] = 0;
   out_6209670763626135864[33] = 0;
   out_6209670763626135864[34] = 0;
   out_6209670763626135864[35] = 0;
   out_6209670763626135864[36] = 0;
   out_6209670763626135864[37] = 0;
   out_6209670763626135864[38] = 0;
   out_6209670763626135864[39] = 0;
   out_6209670763626135864[40] = 0;
   out_6209670763626135864[41] = 0;
   out_6209670763626135864[42] = 0;
   out_6209670763626135864[43] = 0;
   out_6209670763626135864[44] = 0;
   out_6209670763626135864[45] = 0;
   out_6209670763626135864[46] = 0;
   out_6209670763626135864[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_6209670763626135864[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_6209670763626135864[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_6209670763626135864[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_6209670763626135864[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_6209670763626135864[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_6209670763626135864[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_6209670763626135864[54] = 0;
   out_6209670763626135864[55] = 0;
   out_6209670763626135864[56] = 0;
   out_6209670763626135864[57] = 0;
   out_6209670763626135864[58] = 0;
   out_6209670763626135864[59] = 0;
   out_6209670763626135864[60] = 0;
   out_6209670763626135864[61] = 0;
   out_6209670763626135864[62] = 0;
   out_6209670763626135864[63] = 0;
   out_6209670763626135864[64] = 0;
   out_6209670763626135864[65] = 0;
}
void h_14(double *state, double *unused, double *out_3506819500148172015) {
   out_3506819500148172015[0] = state[10];
   out_3506819500148172015[1] = state[11];
   out_3506819500148172015[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3262276840094520178) {
   out_3262276840094520178[0] = 0;
   out_3262276840094520178[1] = 0;
   out_3262276840094520178[2] = 0;
   out_3262276840094520178[3] = 0;
   out_3262276840094520178[4] = 0;
   out_3262276840094520178[5] = 0;
   out_3262276840094520178[6] = 0;
   out_3262276840094520178[7] = 0;
   out_3262276840094520178[8] = 0;
   out_3262276840094520178[9] = 0;
   out_3262276840094520178[10] = 1;
   out_3262276840094520178[11] = 0;
   out_3262276840094520178[12] = 0;
   out_3262276840094520178[13] = 0;
   out_3262276840094520178[14] = 0;
   out_3262276840094520178[15] = 0;
   out_3262276840094520178[16] = 0;
   out_3262276840094520178[17] = 0;
   out_3262276840094520178[18] = 0;
   out_3262276840094520178[19] = 0;
   out_3262276840094520178[20] = 0;
   out_3262276840094520178[21] = 0;
   out_3262276840094520178[22] = 0;
   out_3262276840094520178[23] = 0;
   out_3262276840094520178[24] = 0;
   out_3262276840094520178[25] = 0;
   out_3262276840094520178[26] = 0;
   out_3262276840094520178[27] = 0;
   out_3262276840094520178[28] = 0;
   out_3262276840094520178[29] = 0;
   out_3262276840094520178[30] = 0;
   out_3262276840094520178[31] = 0;
   out_3262276840094520178[32] = 0;
   out_3262276840094520178[33] = 1;
   out_3262276840094520178[34] = 0;
   out_3262276840094520178[35] = 0;
   out_3262276840094520178[36] = 0;
   out_3262276840094520178[37] = 0;
   out_3262276840094520178[38] = 0;
   out_3262276840094520178[39] = 0;
   out_3262276840094520178[40] = 0;
   out_3262276840094520178[41] = 0;
   out_3262276840094520178[42] = 0;
   out_3262276840094520178[43] = 0;
   out_3262276840094520178[44] = 0;
   out_3262276840094520178[45] = 0;
   out_3262276840094520178[46] = 0;
   out_3262276840094520178[47] = 0;
   out_3262276840094520178[48] = 0;
   out_3262276840094520178[49] = 0;
   out_3262276840094520178[50] = 0;
   out_3262276840094520178[51] = 0;
   out_3262276840094520178[52] = 0;
   out_3262276840094520178[53] = 0;
   out_3262276840094520178[54] = 0;
   out_3262276840094520178[55] = 0;
   out_3262276840094520178[56] = 1;
   out_3262276840094520178[57] = 0;
   out_3262276840094520178[58] = 0;
   out_3262276840094520178[59] = 0;
   out_3262276840094520178[60] = 0;
   out_3262276840094520178[61] = 0;
   out_3262276840094520178[62] = 0;
   out_3262276840094520178[63] = 0;
   out_3262276840094520178[64] = 0;
   out_3262276840094520178[65] = 0;
}
void h_33(double *state, double *unused, double *out_1401747651110303385) {
   out_1401747651110303385[0] = state[16];
   out_1401747651110303385[1] = state[17];
   out_1401747651110303385[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4032276713347502668) {
   out_4032276713347502668[0] = 0;
   out_4032276713347502668[1] = 0;
   out_4032276713347502668[2] = 0;
   out_4032276713347502668[3] = 0;
   out_4032276713347502668[4] = 0;
   out_4032276713347502668[5] = 0;
   out_4032276713347502668[6] = 0;
   out_4032276713347502668[7] = 0;
   out_4032276713347502668[8] = 0;
   out_4032276713347502668[9] = 0;
   out_4032276713347502668[10] = 0;
   out_4032276713347502668[11] = 0;
   out_4032276713347502668[12] = 0;
   out_4032276713347502668[13] = 0;
   out_4032276713347502668[14] = 0;
   out_4032276713347502668[15] = 0;
   out_4032276713347502668[16] = 1;
   out_4032276713347502668[17] = 0;
   out_4032276713347502668[18] = 0;
   out_4032276713347502668[19] = 0;
   out_4032276713347502668[20] = 0;
   out_4032276713347502668[21] = 0;
   out_4032276713347502668[22] = 0;
   out_4032276713347502668[23] = 0;
   out_4032276713347502668[24] = 0;
   out_4032276713347502668[25] = 0;
   out_4032276713347502668[26] = 0;
   out_4032276713347502668[27] = 0;
   out_4032276713347502668[28] = 0;
   out_4032276713347502668[29] = 0;
   out_4032276713347502668[30] = 0;
   out_4032276713347502668[31] = 0;
   out_4032276713347502668[32] = 0;
   out_4032276713347502668[33] = 0;
   out_4032276713347502668[34] = 0;
   out_4032276713347502668[35] = 0;
   out_4032276713347502668[36] = 0;
   out_4032276713347502668[37] = 0;
   out_4032276713347502668[38] = 0;
   out_4032276713347502668[39] = 1;
   out_4032276713347502668[40] = 0;
   out_4032276713347502668[41] = 0;
   out_4032276713347502668[42] = 0;
   out_4032276713347502668[43] = 0;
   out_4032276713347502668[44] = 0;
   out_4032276713347502668[45] = 0;
   out_4032276713347502668[46] = 0;
   out_4032276713347502668[47] = 0;
   out_4032276713347502668[48] = 0;
   out_4032276713347502668[49] = 0;
   out_4032276713347502668[50] = 0;
   out_4032276713347502668[51] = 0;
   out_4032276713347502668[52] = 0;
   out_4032276713347502668[53] = 0;
   out_4032276713347502668[54] = 0;
   out_4032276713347502668[55] = 0;
   out_4032276713347502668[56] = 0;
   out_4032276713347502668[57] = 0;
   out_4032276713347502668[58] = 0;
   out_4032276713347502668[59] = 0;
   out_4032276713347502668[60] = 0;
   out_4032276713347502668[61] = 0;
   out_4032276713347502668[62] = 1;
   out_4032276713347502668[63] = 0;
   out_4032276713347502668[64] = 0;
   out_4032276713347502668[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1189403918695843892) {
  H(in_vec, out_1189403918695843892);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_5827728672082830178) {
  err_fun(nom_x, delta_x, out_5827728672082830178);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6403087584989244091) {
  inv_err_fun(nom_x, true_x, out_6403087584989244091);
}
void live_H_mod_fun(double *state, double *out_6682673624500932631) {
  H_mod_fun(state, out_6682673624500932631);
}
void live_f_fun(double *state, double dt, double *out_281945508645819582) {
  f_fun(state,  dt, out_281945508645819582);
}
void live_F_fun(double *state, double dt, double *out_5204355048752879329) {
  F_fun(state,  dt, out_5204355048752879329);
}
void live_h_4(double *state, double *unused, double *out_6268461379963490354) {
  h_4(state, unused, out_6268461379963490354);
}
void live_H_4(double *state, double *unused, double *out_7897248298350583968) {
  H_4(state, unused, out_7897248298350583968);
}
void live_h_9(double *state, double *unused, double *out_3506819500148172015) {
  h_9(state, unused, out_3506819500148172015);
}
void live_H_9(double *state, double *unused, double *out_3262276840094520178) {
  H_9(state, unused, out_3262276840094520178);
}
void live_h_10(double *state, double *unused, double *out_2071964238460945639) {
  h_10(state, unused, out_2071964238460945639);
}
void live_H_10(double *state, double *unused, double *out_3438028015911880382) {
  H_10(state, unused, out_3438028015911880382);
}
void live_h_12(double *state, double *unused, double *out_3586858468164272311) {
  h_12(state, unused, out_3586858468164272311);
}
void live_H_12(double *state, double *unused, double *out_1515989921307850972) {
  H_12(state, unused, out_1515989921307850972);
}
void live_h_35(double *state, double *unused, double *out_5002230194502831622) {
  h_35(state, unused, out_5002230194502831622);
}
void live_H_35(double *state, double *unused, double *out_2784476335001992144) {
  H_35(state, unused, out_2784476335001992144);
}
void live_h_32(double *state, double *unused, double *out_743681562210955515) {
  h_32(state, unused, out_743681562210955515);
}
void live_H_32(double *state, double *unused, double *out_3097098029889437172) {
  H_32(state, unused, out_3097098029889437172);
}
void live_h_13(double *state, double *unused, double *out_7405346955813858797) {
  h_13(state, unused, out_7405346955813858797);
}
void live_H_13(double *state, double *unused, double *out_6209670763626135864) {
  H_13(state, unused, out_6209670763626135864);
}
void live_h_14(double *state, double *unused, double *out_3506819500148172015) {
  h_14(state, unused, out_3506819500148172015);
}
void live_H_14(double *state, double *unused, double *out_3262276840094520178) {
  H_14(state, unused, out_3262276840094520178);
}
void live_h_33(double *state, double *unused, double *out_1401747651110303385) {
  h_33(state, unused, out_1401747651110303385);
}
void live_H_33(double *state, double *unused, double *out_4032276713347502668) {
  H_33(state, unused, out_4032276713347502668);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
